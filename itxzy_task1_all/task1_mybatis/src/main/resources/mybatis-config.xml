<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        可以配置多个运行环境，但是每个 SqlSessionFactory 实例只能选择一个运行环境  development:开发模式，work：工作模式
    -->
    <!--引入database.properties文件-->
    <properties resource="c3p0.properties" />
    <typeAliases>
        <!--type:类型的全路径  alias:对应类型的别名   建议类名首字母小写-->

        <typeAlias type="com.jnshu.crq.pojo.Student" alias="Student"></typeAlias>
        <!--
            扫描指定的包名  别名：类名，默认首字母小写
        -->
        <package name="com.jnshu.crq.pojo"></package>
    </typeAliases>

    <environments default="mybatis">
        <!--id属性必须和上面的default一样  -->
        <environment id="mybatis">
            <!-- transactionManager 事物管理器 JDBC，MANAGED
                JDBC:这个配置直接简单使用了 JDBC 的提交和回滚设置。它依赖于从数据源得到的连接来管理事务范围
                MANAGED:这个配置几乎没做什么。它从来不提交或回滚一个连接。而它会让容器来管理事务的整个生命周期
                        比如 spring 或 JEE 应用服务器的上下文，默认情况下，它会关闭连接。然而一些容器并不希望这样，
                        因此如果你需要从连接中停止它，就可以将 closeConnection 属性设置为 false，比如：
                        <transactionManager type="MANAGED">
                            <property name="closeConnection" value="false"/>
                        </transactionManager>
            -->
            <transactionManager type="JDBC"/>
            <!--dataSource 数据源,元素使用标准的 JDBC 数据源接口来配置 JDBC 连接对象源
                jdbc的配置文件
             -->

            <dataSource type="POOLED" >
                <property name="driver" value="${driverClass}"/>
                <property name="url" value="${jdbcUrl}"/>
                <property name="username" value="${user}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <!-- dao1注册personMapper.xml文件，userMapper.xml位于com.crq.bean这个包下，所以resource写成com/crq/bean/personMapper.xml
        -->
        <mapper resource="mapper/StudentMapper.xml"/>

        <!--dao2批量加载,针对于interface，使用注解方式，无mapper.xml-->
        <!--<package name="com.jnshu.crq.mapper"></package>-->
        <!--
            针对interface，对于单个文件
        <mapper class="com.jnshu.crq.mapper.StudentMapper"></mapper>-->
    </mappers>
</configuration>